version: '3.5'

services:
  api:
    container_name: 'snippet-manager-app'
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - USERNAME=${USERNAME}
        - TOKEN=${TOKEN}
    ports:
      - '8083:8083'
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DB}
      DB_HOST: ${DB_HOST}
      DB_PORT: 5432
      BLOB_URL: ${BLOB_URL}
      REDIS_HOST: ${REDIS_HOST}
      PERMISSION_URL: ${PERMISSION_URL}
      RUNNER_URL: ${RUNNER}
#      NEW_RELIC_AGENT_ENABLED: false
    networks:
      - snippet_network
      - manager_network

  db:
    container_name: 'manager-db'
    image: postgres:alpine
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - manager_network

    volumes:
      - pgdata:/var/lib/postgresql/data

  asset-service:
    container_name: "asset-service"
    image: ghcr.io/austral-ingsis/snippet-asset-service:latest
    ports:
      - "8080:8080"
    environment:
      AZURE_HOST: "http://azurite"
      NEW_RELIC_AGENT_ENABLED: false
    networks:
      - manager_network

  azurite:
    container_name: "azurite"
    image: mcr.microsoft.com/azure-storage/azurite
    hostname: azurite
    restart: always
    ports:
      - "10000:10000"
      - "10001:10001"
      - "10002:10002"
    volumes:
      - azurite_data:/data
    networks:
      - manager_network

  redis:
    container_name: "redis"
    image: redis:6-alpine
    ports:
      - "6379:6379"

volumes:
  pgdata:
  azurite_data:
    external: false

networks:
  manager_network:
    name: manager_network
    driver: bridge
  snippet_network:
    name: snippet_network
    driver: bridge
